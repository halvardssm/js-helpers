name: on push or pr

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: denoland/setup-deno@v1

      - name: Run format check
        run: deno task format:check

      - name: Run lint check
        run: deno task lint:check

      - name: Run test
        run: deno task test

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: denoland/setup-deno@v1

      - name: Build package
        run: deno task build:npm

  publish_release:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: contains(github.ref, 'main')
    steps:
      - uses: actions/checkout@v3
      - uses: denoland/setup-deno@v1

      - name: Get tags
        id: tag
        run: |
          echo "::set-output name=new::$(jq -r '.version' deno.json)"

      - name: Check if release exists
        id: check_release
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{ github.repository }}/releases/tags/${{ steps.tag.outputs.new }}
          headers: |
            Authorization: ${{ secrets.GITHUB_TOKEN }}

      - name: Build package
        if: steps.check_release.outputs.status != 200
        run: deno task build:npm

      - name: Publish release
        if: steps.check_release.outputs.status != 200
        run: |
          git tag -a ${{steps.tag.outputs.new}} -m "${{steps.tag.outputs.new}}"
          git push --tags
